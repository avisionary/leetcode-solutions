Problem Number,Name,Comments
46,Pemutation,"Can do it using the itertools.pemutation
However do it from scratch: This is a backtracking problem, so using recursion is a good choice. Need to know the basecase first though."
231,Power of 2,"Can be done using taking log. Also done using recursion. However both these methods don't clear all test cases because of runtime error. 
The solution that does work is by converting to binary and counting the presence of 1 in that"
344,Reverse String,"Can be done using pythons reverse function. However, to do it from scratch use recursion.
The idea is to know when you reach the middle so that you can stop reversing. For this we use two pointers called left and right."
5,Longest Palindromic Substring,"Started doing it from extreme ends of the string and worked inwards. This however exceeded time limit for some test cases.
An alternate and quicer way to do it is by working from middle to outer sections."
35,Search Insert Position,"Can be done using any searching algorithm.
I have done it using binary search. Recursion has been used to do that."
53,Maximum Subarray,Done using dynamic programming.
509,Fibbonaci Number,"The first approach Is to try this with Reursion which is very staright forward.
However, that throws max depth error on leetcode. So dynamic programming has to be used.
The key concept to keep in mind is that a value that has been computed gets computed again in recursion. So we use a dictonary to store these values and access them if needed."